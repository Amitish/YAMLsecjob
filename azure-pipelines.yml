# #  To final flow ye hoga:

# # Terraform Init â†’ Terraform Plan â†’ (agent pool)

# # Trivy Scan â†’ (agent pool)

# # Manual Validation â†’ (server pool)

# # Terraform Apply â†’ (agent pool)

trigger:
  branches:
    include:
      - main
      - feature/*

jobs:
  # âœ… Job 1: Terraform Init
  - job: TerraformInit
    displayName: "Terraform Init"
    pool:
      name: agent-ka-pool
    steps:
      - task: TerraformInstaller@1
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: 'latest'

      - task: TerraformTask@5
        displayName: 'Terraform Init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/module'
          backendServiceArm: 'servocon'
          backendAzureRmStorageAccountName: 'strjobs'
          backendAzureRmContainerName: 'cntrjobs'
          backendAzureRmKey: 'newz.tfstate'

  # âœ… Job 2: Terraform Plan
  - job: TerraformPlan
    displayName: "Terraform Plan"
    dependsOn: TerraformInit
    pool:
      name: agent-ka-pool
    steps:
      - task: TerraformInstaller@1
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: 'latest'

      - task: TerraformTask@5
        displayName: 'Terraform Init (before Plan)'
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/module'
          backendServiceArm: 'servocon'
          backendAzureRmStorageAccountName: 'strjobs'
          backendAzureRmContainerName: 'cntrjobs'
          backendAzureRmKey: 'newz.tfstate'

      - task: TerraformTask@5
        displayName: 'Terraform Plan'
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/module'
          environmentServiceNameAzureRM: 'servocon'

  # âœ… Job 3: Trivy Security Scan
  - job: TrivyScan
    displayName: "Trivy IaC Security Scan"
    dependsOn: TerraformPlan
    pool:
      name: agent-ka-pool   # ðŸ‘ˆ Trivy agent pool par hi chalega
    steps:
      - task: trivy@2
        displayName: "Trivy IaC (Filesystem) Security Scan"
        inputs:
          type: 'filesystem'
          target: '$(System.DefaultWorkingDirectory)/module'
          scanners: 'vuln,misconfig,secret'
          severity: 'HIGH,CRITICAL'
          exitCode: '1'  # agar HIGH ya CRITICAL vulnerabilities dikhe â€” pipeline fail ho

  # âœ… Job 4: Manual Approval
  - job: ManualApproval
    displayName: "Wait for Manual Validation"
    dependsOn: TrivyScan
    pool:
      name: server   # ðŸ‘ˆ Manual validation server pool pe chalega
    steps:
      - task: ManualValidation@0
        inputs:
          instructions: 'Please review Terraform Plan and Security Scan results. Approve to proceed with Apply.'
          onTimeout: 'reject'
          timeout: '1h'

  # âœ… Job 5: Terraform Apply
  - job: TerraformApply
    displayName: "Terraform Apply"
    dependsOn: ManualApproval
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    pool:
      name: agent-ka-pool
    steps:
      - task: TerraformInstaller@1
        displayName: 'Install Terraform'
        inputs:
          terraformVersion: 'latest'

      - task: TerraformTask@5
        displayName: 'Terraform Init (Again in Apply)'
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/module'
          backendServiceArm: 'servocon'
          backendAzureRmStorageAccountName: 'strjobs'
          backendAzureRmContainerName: 'cntrjobs'
          backendAzureRmKey: 'newz.tfstate'
          
      - task: TerraformTask@5
        displayName: 'Terraform Apply'
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/module'
          environmentServiceNameAzureRM: 'servocon'


# trigger:
#   branches:
#     include:
#       - main
#       - feature/*

# jobs:
#   # âœ… Job 1: Terraform Init
#   - job: TerraformInit
#     displayName: "Terraform Init"
#     pool:
#       name: agent-ka-pool
#     steps:
#       - task: TerraformInstaller@1
#         displayName: 'Install Terraform'
#         inputs:
#           terraformVersion: 'latest'

#       - task: TerraformTask@5
#         displayName: 'Terraform Init'
#         inputs:
#           provider: 'azurerm'
#           command: 'init'
#           workingDirectory: '$(System.DefaultWorkingDirectory)/module'
#           backendServiceArm: 'servocon'
#           backendAzureRmStorageAccountName: 'strjobs'
#           backendAzureRmContainerName: 'cntrjobs'
#           backendAzureRmKey: 'newz.tfstate'

#   # âœ… Job 2: Terraform Plan (depends on Init)
#   - job: TerraformPlan
#     displayName: "Terraform Plan"
#     dependsOn: TerraformInit
#     pool:
#       name: agent-ka-pool
#     steps:
#       - task: TerraformTask@5
#         displayName: 'Terraform Plan'
#         inputs:
#           provider: 'azurerm'
#           command: 'plan'
#           workingDirectory: '$(System.DefaultWorkingDirectory)/module'
#           environmentServiceNameAzureRM: 'servocon'

#   # âœ… Job 3: Manual Approval (depends on Plan)
#   - job: ManualApproval
#     displayName: "Wait for Manual Validation"
#     dependsOn: TerraformPlan
#     pool:
#       name: server
#     steps:
#       - task: ManualValidation@0
#         inputs:
#           instructions: 'Please review Terraform Plan and Security Scan results. Approve to proceed with Apply.'
#           onTimeout: 'reject'
#           timeout: '1h'

#   # âœ… Job 4: Terraform Apply (only runs on main branch, depends on approval)
#   - job: TerraformApply
#     displayName: "Terraform Apply"
#     dependsOn: ManualApproval
#     condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
#     pool:
#       name: agent-ka-pool
#     steps:
#       - task: TerraformInstaller@1
#         displayName: 'Install Terraform'
#         inputs:
#           terraformVersion: 'latest'

#       - task: TerraformTask@5
#         displayName: 'Terraform Init (Again in Apply)'
#         inputs:
#           provider: 'azurerm'
#           command: 'init'
#           workingDirectory: '$(System.DefaultWorkingDirectory)/module'
#           backendServiceArm: 'servocon'
#           backendAzureRmStorageAccountName: 'strjobs'
#           backendAzureRmContainerName: 'cntrjobs'
#           backendAzureRmKey: 'newz.tfstate'
          
#       - task: TerraformTask@5
#         displayName: 'Terraform Apply'
#         inputs:
#           provider: 'azurerm'
#           command: 'apply'
#           workingDirectory: '$(System.DefaultWorkingDirectory)/module'
#           environmentServiceNameAzureRM: 'servocon'
